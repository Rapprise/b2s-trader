/*
 * Copyright (c) 2020, Rapprise.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * 1. Redistributions of source code must retain the above copyright notice, this
 *    list of conditions and the following disclaimer.
 *
 * 2. Redistributions in binary form must reproduce the above copyright notice,
 *    this list of conditions and the following disclaimer in the documentation
 *    and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

#ifndef AUTO_TRADER_RSI_STRATEGY_UT_H
#define AUTO_TRADER_RSI_STRATEGY_UT_H

#include <vector>

#include "common/market_data.h"

namespace auto_trader {
namespace strategies {
namespace unit_test {

std::vector<common::MarketData> rsiToSellSignal = {
    {11577, 11671, 11577, 11711, 1}, {11671, 11691, 11636, 11698, 1},
    {11689, 11723, 11653, 11743, 1}, {11717, 11697, 11667, 11737, 1},
    {11697, 11675, 11600, 11727, 1}, {11672, 11637, 11574, 11677, 1},
    {11639, 11672, 11635, 11704, 1}, {11674, 11755, 11674, 11782, 1},
    {11754, 11732, 11701, 11757, 1}, {11732, 11787, 11699, 11794, 1},
    {11784, 11838, 11778, 11859, 1}, {11834, 11825, 11798, 11861, 1},
    {11824, 11823, 11745, 11845, 1}, {11823, 11872, 11823, 11905, 1},
    {11873, 11981, 11868, 11983, 1}, {11981, 11977, 11899, 11986, 1},
    {11979, 11985, 11962, 12021, 1}, {11985, 11990, 11972, 12020, 1},
    {11824, 11892, 11818, 11892, 1}, {11893, 12040, 11893, 12051, 1},
    {12038, 12042, 12019, 12058, 1}, {12041, 12062, 11981, 12081, 1},
    {12062, 12092, 12026, 12092, 1}, {12092, 12162, 12092, 12189, 1},
    {12153, 12233, 12150, 12239, 1}, {12229, 12240, 12188, 12254, 1},
    {12240, 12229, 12157, 12240, 1}};

common::MarketData additionalCandleToSell = {12228, 12273, 12180, 12286, 1};

std::vector<common::MarketData> rsiToBuySignal = {
    {12081, 12190, 12081, 12217, 1}, {12190, 12110, 12106, 12208, 1},
    {12108, 12050, 11875, 12109, 1}, {12049, 11935, 11925, 12057, 1},
    {11935, 12044, 11934, 12099, 1}, {12042, 12189, 12042, 12190, 1},
    {12188, 12261, 12176, 12284, 1}, {12262, 12414, 12262, 12427, 1},
    {12412, 12583, 12404, 12596, 1}, {12583, 12570, 12541, 12602, 1},
    {12562, 12626, 12539, 12643, 1}, {12627, 12719, 12627, 12754, 1},
    {12718, 12657, 12567, 12718, 1}, {12656, 12506, 12470, 12656, 1},
    {12506, 12447, 12447, 12571, 1}, {12447, 12492, 12447, 12611, 1},
    {12492, 12437, 12414, 12582, 1}, {12437, 12480, 12406, 12505, 1},
    {12475, 12385, 12296, 12475, 1}, {12386, 12587, 12386, 12608, 1},
    {12584, 12572, 12547, 12604, 1}, {12567, 12724, 12567, 12751, 1},
    {12725, 12681, 12644, 12741, 1}, {12680, 12593, 12536, 12680, 1},
    {12592, 12501, 12489, 12593, 1}, {12498, 12303, 12290, 12499, 1},
    {12302, 12240, 12227, 12385, 1}, {12239, 12143, 12083, 12243, 1},
    {12144, 12132, 11998, 12282, 1}, {12130, 11867, 11866, 12130, 1},
    {11864, 11896, 11700, 11905, 1}, {11894, 11384, 11372, 11894, 1},
    {11384, 11445, 11139, 11555, 1}, {11434, 10810, 10810, 11434, 1}};

std::vector<common::MarketData> rsiToBuyForDoubleCrossingSignal = {
    {12081, 12190, 12081, 12217, 1}, {12190, 12110, 12106, 12208, 1},
    {12108, 12050, 11875, 12109, 1}, {12049, 11935, 11925, 12057, 1},
    {11935, 12044, 11934, 12099, 1}, {12042, 12189, 12042, 12190, 1},
    {12188, 12261, 12176, 12284, 1}, {12262, 12414, 12262, 12427, 1},
    {12412, 12583, 12404, 12596, 1}, {12583, 12570, 12541, 12602, 1},
    {12562, 12626, 12539, 12643, 1}, {12627, 12719, 12627, 12754, 1},
    {12718, 12657, 12567, 12718, 1}, {12656, 12506, 12470, 12656, 1},
    {12506, 12447, 12447, 12571, 1}, {12447, 12492, 12447, 12611, 1},
    {12492, 12437, 12414, 12582, 1}, {12437, 12480, 12406, 12505, 1},
    {12475, 12385, 12296, 12475, 1}, {12386, 12587, 12386, 12608, 1},
    {12584, 12572, 12547, 12604, 1}, {12567, 12724, 12567, 12751, 1},
    {12725, 12681, 12644, 12741, 1}, {12680, 12593, 12536, 12680, 1},
    {12592, 12501, 12489, 12593, 1}, {12498, 12303, 12290, 12499, 1},
    {12302, 12240, 12227, 12385, 1}, {12239, 12143, 12083, 12243, 1},
    {12144, 12132, 11998, 12282, 1}, {12130, 11867, 11866, 12130, 1},
    {11864, 11896, 11700, 11905, 1}, {11894, 11384, 11372, 11894, 1},
    {11384, 11445, 11139, 11555, 1}};

common::MarketData additionalCandleForBoyDoubleCrossing = {11434, 10810, 10810, 11434, 1};

std::vector<common::MarketData> rsiFiveCandles = {
    {6581.000, 6506.870, 6450.0, 6581.000, 824.000},
    {6502.885, 6145.360, 6049.999, 6502.885, 2610.000},
    {6120.000, 6200.889, 6050.000, 6242.660, 2150.000},
    {6190.000, 6186.000, 6170.042, 6238.590, 611.000},
    {6186.000, 6205.000, 6178.560, 6249.559, 133.000},
};

std::vector<common::MarketData> rsiEmptyMarketData;

}  // namespace unit_test
}  // namespace strategies
}  // namespace auto_trader

#endif  // AUTO_TRADER_RSI_STRATEGY_UT_H
