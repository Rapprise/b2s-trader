/*
 * Copyright (c) 2020, Rapprise.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * 1. Redistributions of source code must retain the above copyright notice, this
 *    list of conditions and the following disclaimer.
 *
 * 2. Redistributions in binary form must reproduce the above copyright notice,
 *    this list of conditions and the following disclaimer in the documentation
 *    and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

#ifndef AUTO_TRADER_SMA_STRATEGY_UT_H
#define AUTO_TRADER_SMA_STRATEGY_UT_H

#include <vector>

#include "common/market_data.h"

namespace auto_trader {
namespace strategies {
namespace unit_test {

std::vector<common::MarketData> smaCandlesToBuy = {
    {22.27, 22.27, 22.27, 22.27, 22.27}, {22.19, 22.19, 22.19, 22.19, 22.19},
    {22.08, 22.08, 22.08, 22.08, 22.08}, {22.17, 22.17, 22.17, 22.17, 22.17},
    {22.18, 22.18, 22.18, 22.18, 22.18}, {22.13, 22.13, 22.13, 22.13, 22.13},
    {22.23, 22.23, 22.23, 22.23, 22.23}, {22.43, 22.43, 22.43, 22.43, 22.43},
    {22.24, 22.24, 22.24, 22.24, 22.24}, {22.29, 22.29, 22.29, 22.29, 22.29},
    {22.15, 22.15, 22.15, 22.15, 22.15}};

std::vector<common::MarketData> smaCandlesToSell = {
    {22.27, 22.27, 22.27, 22.27, 22.27}, {22.19, 22.19, 22.19, 22.19, 22.19},
    {22.08, 22.08, 22.08, 22.08, 22.08}, {22.17, 22.17, 22.17, 22.17, 22.17},
    {22.18, 22.18, 22.18, 22.18, 22.18}, {22.13, 22.13, 22.13, 22.13, 22.13},
    {22.23, 22.23, 22.23, 22.23, 22.23}, {22.43, 22.43, 22.43, 22.43, 22.43},
    {22.24, 22.24, 22.24, 22.24, 22.24}, {22.29, 22.29, 22.29, 22.29, 22.29},
    {22.15, 22.15, 22.15, 22.15, 22.15}, {22.39, 22.39, 22.39, 22.39, 22.39},
    {22.38, 22.38, 22.38, 22.38, 22.38}, {22.61, 22.61, 22.61, 22.61, 22.61}};

std::vector<common::MarketData> smaCandlesToBuySecond = {
    {3899.354, 3910.847, 3899.354, 3910.847, 31771.19121},
    {3910.511, 3913.390, 3910.511, 3915.000, 23792.07473},
    {3911.685, 3917.909, 3907.374, 3919.826, 56319.24906},
    {3917.909, 3911.798, 3911.798, 3918.656, 27686.28295},
    {3912.101, 3915.099, 3912.000, 3915.662, 24852.16023},
    {3915.037, 3916.218, 3912.888, 3916.913, 50898.86019},
    {3916.218, 3914.879, 3912.275, 3921.000, 131419.3891},
    {3913.004, 3915.272, 3911.284, 3915.447, 18808.81698},
    {3915.349, 3918.083, 3913.817, 3920.607, 32993.89884},
    {3921.459, 3920.733, 3914.940, 3922.860, 51772.78955},
    {3918.687, 3915.446, 3912.761, 3918.910, 138872.9634},
    {3918.089, 3917.974, 3911.810, 3918.413, 85961.77295},
    {3917.516, 3915.519, 3914.290, 3917.974, 15910.84497},
    {3914.291, 3911.444, 3911.074, 3915.130, 28474.95081},
    {3909.808, 3911.888, 3909.492, 3915.912, 10442.95158},
    {3911.888, 3912.499, 3900.120, 3913.235, 105326.5773},
    {3912.500, 3914.576, 3910.966, 3914.921, 64686.21302},
    {3914.921, 3914.920, 3911.419, 3914.921, 31435.45970},
    {3914.921, 3917.974, 3914.411, 3917.974, 100569.5918},
    {3917.974, 3915.000, 3914.850, 3917.974, 15242.44981},
    {3915.000, 3935.770, 3915.000, 3935.770, 68510.95386}};

std::vector<common::MarketData> smaCandlesToSellSecond = {
    {3914.281, 3914.020, 3911.888, 3916.377, 13226.89899},
    {3913.856, 3916.694, 3911.520, 3917.013, 65189.96521},
    {3916.937, 3919.904, 3916.937, 3920.000, 166496.9022},
    {3918.834, 3920.339, 3918.834, 3921.840, 40500.21060},
    {3918.959, 3911.957, 3910.000, 3921.518, 42469.13176},
    {3912.562, 3912.708, 3910.595, 3916.680, 14783.38957},
    {3915.569, 3912.708, 3912.708, 3915.720, 8831.825197},
    {3914.049, 3914.999, 3914.049, 3915.000, 15306.56267},
    {3914.529, 3908.757, 3908.678, 3914.999, 16026.65100},
    {3913.213, 3905.078, 3905.078, 3913.213, 83732.97755},
    {3904.954, 3895.000, 3892.312, 3904.954, 158711.4111},
    {3895.000, 3894.113, 3890.000, 3898.056, 82334.66383},
    {3893.341, 3898.500, 3888.320, 3898.500, 189869.1274},
    {3898.500, 3904.903, 3898.500, 3904.954, 128294.9779},
    {3902.718, 3905.882, 3901.019, 3905.882, 77687.08918},
    {3908.405, 3906.137, 3903.065, 3908.996, 25373.97297},
    {3905.502, 3904.793, 3904.793, 3908.381, 4076.960237},
    {3904.793, 3903.689, 3901.818, 3906.228, 31191.44020},
    {3903.013, 3899.999, 3899.999, 3903.689, 41525.02441}};

std::vector<common::MarketData> smaFiveCandles = {
    {6581.000, 6506.870, 6450.0, 6581.000, 824.000},
    {6502.885, 6145.360, 6049.999, 6502.885, 2610.000},
    {6120.000, 6200.889, 6050.000, 6242.660, 2150.000},
    {6190.000, 6186.000, 6170.042, 6238.590, 611.000},
    {6186.000, 6205.000, 6178.560, 6249.559, 133.000},
};

std::vector<common::MarketData> smaEmptyMarketData;

}  // namespace unit_test
}  // namespace strategies
}  // namespace auto_trader

#endif  // AUTO_TRADER_SMA_STRATEGY_UT_H
