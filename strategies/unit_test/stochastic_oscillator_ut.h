/*
 * Copyright (c) 2020, Rapprise.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * 1. Redistributions of source code must retain the above copyright notice, this
 *    list of conditions and the following disclaimer.
 *
 * 2. Redistributions in binary form must reproduce the above copyright notice,
 *    this list of conditions and the following disclaimer in the documentation
 *    and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

#ifndef AUTO_TRADER_STOCHASTIC_OSCILLATOR_UT_H
#define AUTO_TRADER_STOCHASTIC_OSCILLATOR_UT_H

#include <vector>

#include "common/market_data.h"

namespace auto_trader {
namespace strategies {
namespace unit_test {

std::vector<common::MarketData> stochasticToBuy = {
    {3807.211, 3811.519, 3799.259, 3812.848, 82000},
    {3811.519, 3812.299, 3804.276, 3812.358, 11000},
    {3811.386, 3812.358, 3804.851, 3814.549, 38600},
    {3806.850, 3807.460, 3804.273, 3812.349, 17500},
    {3807.460, 3805.125, 3802.999, 3810.833, 119000},
    {3810.833, 3807.819, 3805.129, 3814.334, 9940},
    {3807.819, 3813.880, 3806.493, 3822.738, 63100},
    {3814.174, 3813.865, 3806.490, 3814.348, 56100},
    {3808.000, 3816.000, 3806.497, 3819.683, 46900},
    {3816.000, 3818.030, 3811.940, 3824.999, 123000},
    {3810.000, 3799.095, 3779.967, 3810.462, 207000},
    {3792.320, 3809.595, 3792.320, 3810.965, 5640},
    {3804.000, 3800.877, 3798.274, 3807.811, 43800},
    {3799.997, 3799.530, 3795.108, 3806.051, 20400},
    {3796.000, 3798.006, 3792.900, 3800.504, 22800},
    {3806.130, 3802.602, 3791.715, 3806.130, 10500},
    {3795.070, 3803.921, 3795.070, 3807.930, 73500},
    {3803.919, 3805.320, 3798.000, 3806.311, 25100},
    {3806.097, 3803.416, 3795.125, 3806.097, 147000},
    {3802.872, 3800.890, 3795.005, 3803.396, 24600},
    {3800.887, 3802.510, 3795.000, 3802.510, 24500},
    {3802.504, 3802.502, 3794.716, 3802.507, 6790},
    {3802.491, 3795.976, 3788.824, 3802.491, 105000},
    {3795.973, 3716.990, 3649.475, 3795.973, 1650000},
    {3716.425, 3742.595, 3708.340, 3747.264, 415000},
    {3742.595, 3740.930, 3728.031, 3745.674, 164000},
    {3747.366, 3794.000, 3742.000, 3813.000, 28300},
    {3794.000, 3803.643, 3742.000, 3812.999, 30800},
    {3802.000, 3810.601, 3774.172, 3813.000, 12300},
    {3774.190, 3793.751, 3774.190, 3813.000, 1470}};

std::vector<common::MarketData> slowStochasticToBuy = {
    {3991.770, 3996.238, 3989.163, 3997.680, 26587.4601},
    {3997.000, 3992.000, 3990.264, 3997.000, 22774.9538},
    {3992.000, 3994.000, 3991.312, 3996.999, 19545.5256},
    {3993.999, 3995.928, 3991.181, 3997.191, 35060.3841},
    {3992.074, 3993.749, 3990.330, 3995.708, 15326.5148},
    {3992.211, 3986.500, 3985.698, 3992.211, 16114.4543},
    {3987.341, 3977.083, 3974.951, 3987.342, 20685.2573},
    {3974.939, 3981.500, 3970.020, 3986.585, 56983.8164},
    {3983.990, 3985.751, 3981.838, 3985.751, 9732.44985},
    {3982.208, 3984.992, 3981.768, 3987.352, 12468.1104},
    {3982.050, 3982.907, 3977.490, 3986.713, 24816.3895},
    {3984.000, 3984.000, 3982.787, 3984.000, 12732.7558},
    {3984.000, 3982.000, 3978.011, 3984.000, 11275.3621},
    {3982.000, 3977.722, 3974.955, 3982.001, 31379.1357},
    {3973.599, 3975.507, 3973.597, 3977.709, 1655.98884},
    {3977.382, 3978.653, 3975.511, 3978.653, 2054.44377},
    {3979.898, 3981.589, 3978.531, 3982.129, 11170.0318},
    {3981.702, 3988.962, 3981.449, 3990.906, 96347.8644},
    {3988.962, 3995.000, 3988.961, 3995.000, 38383.5092},
    {3995.000, 3996.472, 3991.762, 3996.485, 32230.8343},
    {3994.126, 3994.803, 3994.126, 3996.486, 2422.28825},
    {3996.271, 3993.230, 3993.230, 3996.758, 17742.9231},
    {3993.230, 3986.611, 3986.611, 3993.230, 10039.3785},
    {3982.650, 3987.893, 3982.650, 3988.008, 2755.13233},
    {3988.892, 3990.947, 3986.158, 3990.947, 13665.7561},
    {3992.250, 3995.997, 3988.860, 3997.444, 40812.5778},
    {3995.997, 3997.498, 3992.771, 3999.068, 87292.1626},
    {3997.498, 3993.108, 3993.108, 3997.498, 23483.2169},
    {3993.108, 3991.997, 3991.997, 3999.666, 9081.11960},
    {3993.259, 3991.321, 3988.859, 3993.259, 5209.83778},
    {3991.775, 3994.065, 3991.775, 3997.171, 4967.35374},
    {3995.004, 3990.995, 3990.995, 3996.870, 2590.37237},
    {3994.138, 3989.393, 3989.268, 3994.187, 1910.29720},
    {3993.301, 3973.984, 3973.984, 3993.650, 286588.052},
    {3975.392, 3976.355, 3973.244, 3977.317, 3874.53817},
    {3976.360, 3980.190, 3976.360, 3991.746, 118244.841},
    {3980.443, 3981.006, 3978.000, 3982.556, 8000.33542}};

const common::MarketData additionalToBuyPoint = {3980.443, 3981.006, 3978.000, 3982.556,
                                                 8000.33542};

std::vector<common::MarketData> slowStochasticToSell = {
    {3991.770, 3996.238, 3989.163, 3997.680, 26587.4601},
    {3997.000, 3992.000, 3990.264, 3997.000, 22774.9538},
    {3992.000, 3994.000, 3991.312, 3996.999, 19545.5256},
    {3993.999, 3995.928, 3991.181, 3997.191, 35060.3841},
    {3992.074, 3993.749, 3990.330, 3995.708, 15326.5148},
    {3992.211, 3986.500, 3985.698, 3992.211, 16114.4543},
    {3987.341, 3977.083, 3974.951, 3987.342, 20685.2573},
    {3974.939, 3981.500, 3970.020, 3986.585, 56983.8164},
    {3983.990, 3985.751, 3981.838, 3985.751, 9732.44985},
    {3982.208, 3984.992, 3981.768, 3987.352, 12468.1104},
    {3982.050, 3982.907, 3977.490, 3986.713, 24816.3895},
    {3984.000, 3984.000, 3982.787, 3984.000, 12732.7558},
    {3984.000, 3982.000, 3978.011, 3984.000, 11275.3621},
    {3982.000, 3977.722, 3974.955, 3982.001, 31379.1357},
    {3973.599, 3975.507, 3973.597, 3977.709, 1655.98884},
    {3977.382, 3978.653, 3975.511, 3978.653, 2054.44377},
    {3979.898, 3981.589, 3978.531, 3982.129, 11170.0318},
    {3981.702, 3988.962, 3981.449, 3990.906, 96347.8644},
    {3988.962, 3995.000, 3988.961, 3995.000, 38383.5092},
    {3995.000, 3996.472, 3991.762, 3996.485, 32230.8343},
    {3994.126, 3994.803, 3994.126, 3996.486, 2422.28825},
    {3996.271, 3993.230, 3993.230, 3996.758, 17742.9231},
};

const common::MarketData additionalToSellPoint = {3993.230, 3986.611, 3986.611, 3993.230,
                                                  10039.3785};

std::vector<common::MarketData> stochasticFiveCandles = {
    {6581.000, 6506.870, 6450.0, 6581.000, 824.000},
    {6502.885, 6145.360, 6049.999, 6502.885, 2610.000},
    {6120.000, 6200.889, 6050.000, 6242.660, 2150.000},
    {6190.000, 6186.000, 6170.042, 6238.590, 611.000},
    {6186.000, 6205.000, 6178.560, 6249.559, 133.000},
};

std::vector<common::MarketData> stochasticEmptyMarketData;

}  // namespace unit_test
}  // namespace strategies
}  // namespace auto_trader

#endif  // AUTO_TRADER_STOCHASTIC_OSCILLATOR_UT_H
